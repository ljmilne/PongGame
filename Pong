#include "Bat.h"
#include <sstream>
#include <cstdlib>
#include <SFML/Graphics.hpp>
#include "Ball.h"

int main()

{
	//create a vieo mode object
	VideoMode vm(1920, 1080);

	//create and open a window for the game
	RenderWindow window(vm, "Pong", Style::Fullscreen);

	int score = 0;
	int lives = 3;

	//create a bat at the bottom centre of the screen
	Bat bat(1920 / 2, 1080 - 20);
	//create a ball
	Ball ball(1920 / 2, 0);

	//create a Text object called HUD
	Text hud;

	//a cool retro-style font
	Font font;
	font.loadFromFile("fonts/DS-DIGI.ttf");

	//set the font to our retro-style
	hud.setFont(font);

	//make it nice and big
	hud.setCharacterSize(75);

	//Choose a color
	hud.setFillColor(Color::White);

	hud.setPosition(20, 20);

	//Here is our clock for timing everything
	Clock clock;

	while (window.isOpen())
	{
		/* Handle the player input
		********************************************
		********************************************
		********************************************/

		Event event;
		while (window.pollEvent(event))
		{
			if (event.type == Event::Closed)
				//Quit the game when the qindow is closed
				window.close();
		}

		//Handle the player quitting
		if (Keyboard::isKeyPressed(Keyboard::Escape))
		{
			window.close();
		}

		//Handle the player pressing and releasing the arrow keys
		if (Keyboard::isKeyPressed(Keyboard::Left))
		{
			bat.moveLeft();
		}
		else
		{
			bat.stopLeft();
		}
			if (Keyboard::isKeyPressed(Keyboard::Escape))
		{
			window.close();
		}

		if (Keyboard::isKeyPressed(Keyboard::Right))
		{
			bat.moveRight();
		}
		else
		{
			bat.stopRight();
		}

		/* Update the bat and ball, and the HUD
		********************************************
		********************************************
		********************************************/

		//update the delta time
		Time dt = clock.restart();
		bat.update(dt);
		ball.update(dt);
		//update the HUD text
		std::stringstream ss;
		ss << "Score:" << score << "   Lives:" << lives;
		hud.setString(ss.str());

		//Handle the ball hitting the bottom
		if (ball.getPosition().top > window.getSize().y)
		{
			//reverse the ball direction
			ball.reboundBottom();

			//remove a life
			lives -- ;

			//check for zero lives
			if (lives < 1) {
				//reset the score
				score = 0;
				//reset the lives
				lives = 3;
			}
		}

		//handle the ball hitting the top
		if (ball.getPosition().top < 0)
		{
			ball.reboundBatorTop();
			score ++;
		}

		//handle the ball hitting the sides
		if (ball.getPosition().left <0 ||
			ball.getPosition().left + ball.getPosition().width>window.getSize().x)
		{
			ball.reboundSides();
		}

		//has the ball hit the bat?
		if (ball.getPosition().intersects(bat.getPosition()))
		{
			//hit detected, reverse the ball and score a point
			ball.reboundBatorTop();
			score++;
		}


		/* Draw the bat and ball, and the HUD
		********************************************
		********************************************
		********************************************/

		window.clear();
		window.draw(hud);
		window.draw(bat.getShape());
		window.draw(ball.getShape());
		window.display();

	}

	return 0;

}

